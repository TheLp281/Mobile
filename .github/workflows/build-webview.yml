name: Build React Native App (Android & iOS)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk curl wget unzip

      - name: Install Node.js using NVM
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm install --lts

      - name: Install Android SDK
        run: |
          ANDROID_SDK_URL="https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip"
          SDK_DIR="$HOME/Android/Sdk"
          mkdir -p "$SDK_DIR/cmdline-tools"
          wget -q "$ANDROID_SDK_URL" -O cmdline-tools.zip
          unzip cmdline-tools.zip -d "$SDK_DIR/cmdline-tools"
          mv "$SDK_DIR/cmdline-tools/cmdline-tools" "$SDK_DIR/cmdline-tools/latest"
          rm cmdline-tools.zip
          echo "export ANDROID_HOME=$SDK_DIR" >> $GITHUB_ENV
          echo "export PATH=$SDK_DIR/cmdline-tools/latest/bin:$SDK_DIR/platform-tools:$SDK_DIR/emulator:$PATH" >> $GITHUB_ENV

      - name: Accept Android licenses
        run: |
          export ANDROID_HOME="$HOME/Android/Sdk"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"
          yes | sdkmanager --licenses

      - name: Install Android SDK components
        run: |
          export ANDROID_HOME="$HOME/Android/Sdk"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Create React Native WebView App
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          npx @react-native-community/cli init LiventCord
          cd LiventCord
          echo "sdk.dir=$HOME/Android/Sdk" > android/local.properties
          npm install react-native-webview

      - name: Configure Gradle signing
        run: |
          cd LiventCord
          echo "MYAPP_RELEASE_STORE_FILE=my-release-key.jks" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=my-key-alias" >> android/gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties

      - name: Build release APK
        run: |
          cd LiventCord/android
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: LiventCord/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew install node
          npm install -g react-native-cli
          npm install

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS app
        run: |
          xcodebuild -workspace ios/LiventCord.xcworkspace \
          -scheme LiventCord \
          -sdk iphoneos \
          -configuration Release \
          archive -archivePath ios/build/LiventCord.xcarchive

      - name: Export .ipa file
        run: |
          xcodebuild -exportArchive \
          -archivePath ios/build/LiventCord.xcarchive \
          -exportOptionsPlist ios/ExportOptions.plist \
          -exportPath ios/build/output

      - name: Upload iOS .ipa
        uses: actions/upload-artifact@v4
        with:
          name: app-release.ipa
          path: ios/build/output/*.ipa
